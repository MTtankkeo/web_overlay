class t{reflow(t){t.getBoundingClientRect()}}const e={BOTTOM:new class extends t{performLayout(t){var e,o;const s=t.getBoundingClientRect(),n=t.target.getBoundingClientRect(),h=t.parent.getBoundingClientRect(),r=t.behavior.alignment;null!==(e=null==r?void 0:r.x)&&void 0!==e||i.ALL,null!==(o=null==r?void 0:r.y)&&void 0!==o||i.ALL;const a=n.x+(n.width-s.width)/2,l=n.y+n.height,d=window.innerWidth-(a+s.width),c=window.innerWidth-h.right,y={left:Math.max(h.left-a,0),right:Math.max(c-d,0),bottom:Math.max(l+s.height-h.bottom,0)};console.log(y);const u=a+y.left,p=l-y.bottom;return{x:Math.max(u,0),y:Math.max(p,0),size:{width:Math.min(s.width,h.width),height:Math.min(s.height,s.bottom+p)}}}}};var i;!function(t){t.NONE="none",t.ALL="all",t.SIZE="size",t.POSITION="position"}(i||(i={}));class o{static attach(t,i,o=document.body,s={render:e.BOTTOM}){if(null==t)throw new Error("todo");if(null==i)throw new Error("todo");if(null==o)throw new Error("todo");const n=document.createElement("overlay-wrapper");return n.append(t),n.target=i,n.parent=o,n.behavior=s,this.overlays.set(t,n),o.append(n),n}static detach(t){console.log(this.overlays.get(t))}}o.overlays=new Map;class s extends HTMLElement{unsetLayout(){this.style.width="max-content",this.style.height="max-content",this.style.left="0px",this.style.top="0px",this.getBoundingClientRect()}disconnectedCallback(){this.observer.disconnect()}connectedCallback(){this.style.display="block",this.style.position="fixed",this.style.left="0px",this.style.top="0px",this.style.width="max-content",this.style.height="max-content",this.performLayout(),this.observer=new MutationObserver((()=>{this.unsetLayout(),this.performLayout()})),this.observer.observe(this.firstElementChild,{attributes:!0,characterData:!0,subtree:!0,childList:!0}),window.addEventListener("resize",(()=>{this.unsetLayout(),this.performLayout()}))}performLayout(){const t=this.behavior.render.performLayout(this);this.style.width=`${t.size.width}px`,this.style.height=`${t.size.height}px`,this.style.left=`${t.x}px`,this.style.top=`${t.y}px`}}customElements.define("overlay-wrapper",s);export{o as Overlay,e as OverlayAlignment,s as OverlayElement,t as OverlayRender};
//# sourceMappingURL=index.esm.js.map
