!function(t,e){"object"==typeof exports&&"undefined"!=typeof module?e(exports):"function"==typeof define&&define.amd?define(["exports"],e):e((t="undefined"!=typeof globalThis?globalThis:t||self).Overlay={})}(this,(function(t){"use strict";class e{constructor(t,e){this.viewport=t,this.alignment=e}measure(t){return{size:this.measureSized(t),overflowed:this.measureOverflowed(t)}}}class i extends e{measureSized(t){throw new Error("Method not implemented.")}measureOverflowed(t){const e=this.viewport,i=window.innerWidth-(t.x+t.width),n=window.innerWidth-this.viewport.right;return{left:Math.max(e.left-t.x,0),right:Math.max(n-i,0),top:0,bottom:Math.max(t.y+t.height-e.bottom,0)}}}class n{reflow(t,e){var i,n,o,s;return new DOMRect(null!==(i=e.x)&&void 0!==i?i:t.x,null!==(n=e.y)&&void 0!==n?n:t.y,null!==(o=e.width)&&void 0!==o?o:t.width,null!==(s=e.height)&&void 0!==s?s:t.height)}}class o extends n{createOverlayConstraint(t,e){return new i(t,e)}}const s=new class extends o{performLayout(e){var i,n;const o=e.target.getBoundingClientRect(),s=e.parent.getBoundingClientRect(),r=e.behavior.alignment;null!==(i=null==r?void 0:r.x)&&void 0!==i||t.OverlayAlignment.ALL,null!==(n=null==r?void 0:r.y)&&void 0!==n||t.OverlayAlignment.ALL;let l=e.getBoundingClientRect();const a=o.x+(o.width-l.width)/2,h=o.y+o.height;l=this.reflow(l,{x:a,y:h});const d=this.createOverlayConstraint(s,t.OverlayAlignment.ALL).measureOverflowed(l);console.log(d);const c=a+d.left,y=h-d.bottom;return{x:Math.max(c,0),y:Math.max(y,0),size:{width:Math.min(l.width,s.width),height:Math.min(l.height,l.bottom+y)}}}};var r;t.OverlayAlignment=void 0,(r=t.OverlayAlignment||(t.OverlayAlignment={})).NONE="none",r.ALL="all",r.SIZE="size",r.POSITION="position";class l{static attach(t,e,i=document.body,n={render:s}){if(null==t)throw new Error("todo");if(null==e)throw new Error("todo");if(null==i)throw new Error("todo");const o=document.createElement("overlay-wrapper");return o.append(t),o.target=e,o.parent=i,o.behavior=n,this.overlays.set(t,o),i.append(o),o}static detach(t){console.log(this.overlays.get(t))}}l.overlays=new Map;class a extends HTMLElement{unsetLayout(){this.style.width="max-content",this.style.height="max-content",this.style.left="0px",this.style.top="0px",this.getBoundingClientRect()}disconnectedCallback(){this.observer.disconnect()}connectedCallback(){this.style.display="block",this.style.position="fixed",this.style.left="0px",this.style.top="0px",this.style.width="max-content",this.style.height="max-content",this.performLayout(),this.observer=new MutationObserver((()=>{this.unsetLayout(),this.performLayout()})),this.observer.observe(this.firstElementChild,{attributes:!0,characterData:!0,subtree:!0,childList:!0}),window.addEventListener("resize",(()=>{this.unsetLayout(),this.performLayout()}))}performLayout(){const t=this.behavior.render.performLayout(this);this.style.width=`${t.size.width}px`,this.style.height=`${t.size.height}px`,this.style.left=`${t.x}px`,this.style.top=`${t.y}px`}}customElements.define("overlay-wrapper",a),t.Overlay=l,t.OverlayElement=a,t.OverlayRender=n}));
//# sourceMappingURL=index.umd.js.map
