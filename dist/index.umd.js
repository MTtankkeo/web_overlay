!function(t,e){"object"==typeof exports&&"undefined"!=typeof module?e(exports):"function"==typeof define&&define.amd?define(["exports"],e):e((t="undefined"!=typeof globalThis?globalThis:t||self).Overlay={})}(this,(function(t){"use strict";class e{constructor(t,e){this.viewport=t,this.alignment=e}}class i extends e{getOverflowed(t){const e=this.viewport,i=window.innerWidth-(t.x+t.width),n=window.innerWidth-this.viewport.right;return{left:Math.max(e.left-t.x,0),right:Math.max(n-i,0),top:Math.max(e.top-t.y,0),bottom:Math.max(t.y+t.height-e.bottom,0)}}}class n{static merge(t,e){var i,n,l,r;return new DOMRect(null!==(i=e.x)&&void 0!==i?i:t.x,null!==(n=e.y)&&void 0!==n?n:t.y,null!==(l=e.width)&&void 0!==l?l:t.width,null!==(r=e.height)&&void 0!==r?r:t.height)}static reflowHorizontal(t,e){return t.style.left=`${e.left}px`,t.style.top=`${e.top}px`,t.style.width=`${e.width}px`,t.style.height=null,t.getBoundingClientRect()}}class l{constructor(t,e){this.element=t,this.alignment=e}performLayout(t,e){return this.performLayoutHorizontal(t,e)}performLayoutHorizontal(t,e){let i=e.getOverflowed(t);return 0!=i.left?(t=n.merge(t,{x:t.x+i.left}),i=e.getOverflowed(t),i.right&&(t=n.merge(t,{width:t.width-i.right}),t=n.reflowHorizontal(this.element,t))):0!=i.right&&(t=n.merge(t,{x:t.x-Math.max(i.right,e.viewport.left)}),i=e.getOverflowed(t),i.left&&(t=n.merge(t,{x:t.x+i.left,width:t.width-i.left}),t=n.reflowHorizontal(this.element,t))),t}}class r{reflow(t,e){return null!=(null==e?void 0:e.width)&&(t.style.width=`${e.width}px`),null!=(null==e?void 0:e.height)&&(t.style.height=`${e.height}px`),null!=e.x&&(t.style.left=`${e.x}px`),null!=e.y&&(t.style.top=`${e.y}px`),t.getBoundingClientRect()}}class o extends r{createOverlayConstraint(t,e){return new i(t,e)}}const s=new class extends o{performLayout(e){var i,r;const o=e.target.getBoundingClientRect(),s=e.parent.getBoundingClientRect(),h=e.behavior.alignment,a=null!==(i=null==h?void 0:h.x)&&void 0!==i?i:t.OverlayAlignment.ALL;null!==(r=null==h?void 0:h.y)&&void 0!==r||t.OverlayAlignment.ALL;let d=e.getBoundingClientRect();const y=o.x+(o.width-d.width)/2,c=o.bottom;d=n.merge(d,{x:y,y:c});const p=this.createOverlayConstraint(s,t.OverlayAlignment.ALL);return d=new l(e,a).performLayout(d,p),d=this.reflow(e,d),{x:d.x,y:d.y,size:{width:d.width,height:d.height}}}};var h;t.OverlayAlignment=void 0,(h=t.OverlayAlignment||(t.OverlayAlignment={})).ALL="all",h.NONE="none",h.SIZE="size",h.POSITION="position";class a{static attach(t,e,i=document.body,n={render:s}){if(null==t)throw new Error("todo");if(null==e)throw new Error("todo");if(null==i)throw new Error("todo");const l=document.createElement("overlay-wrapper");return l.append(t),l.target=e,l.parent=i,l.behavior=n,this.overlays.set(t,l),i.append(l),l}static detach(t){console.log(this.overlays.get(t))}}a.overlays=new Map;class d extends HTMLElement{markNeedRepaint(){this.unsetLayout(),this.performLayout()}unsetLayout(){this.style.width="max-content",this.style.height="max-content",this.style.left="0px",this.style.top="0px",this.getBoundingClientRect()}disconnectedCallback(){this.observer.disconnect(),window.removeEventListener("resize",this.markNeedRepaint.bind(this)),window.removeEventListener("scroll",this.markNeedRepaint.bind(this))}connectedCallback(){this.style.display="block",this.style.position="fixed",this.style.left="0px",this.style.top="0px",this.style.width="max-content",this.style.height="max-content",this.performLayout(),this.observer=new MutationObserver(this.markNeedRepaint.bind(this)),this.observer.observe(this.firstElementChild,{attributes:!0,characterData:!0,subtree:!0,childList:!0}),window.addEventListener("resize",this.markNeedRepaint.bind(this)),window.addEventListener("scroll",this.markNeedRepaint.bind(this))}performLayout(){const t=this.behavior.render.performLayout(this);this.style.width=`${t.size.width}px`,this.style.height=`${t.size.height}px`,this.style.left=`${t.x}px`,this.style.top=`${t.y}px`}}customElements.define("overlay-wrapper",d),t.Overlay=a,t.OverlayElement=d,t.OverlayRender=r}));
//# sourceMappingURL=index.umd.js.map
