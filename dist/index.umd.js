!function(t,e){"object"==typeof exports&&"undefined"!=typeof module?e(exports):"function"==typeof define&&define.amd?define(["exports"],e):e((t="undefined"!=typeof globalThis?globalThis:t||self).Overlay={})}(this,(function(t){"use strict";class e{reflow(t){t.getBoundingClientRect()}}const i={BOTTOM:new class extends e{performLayout(t){var e,i;const o=t.getBoundingClientRect(),s=t.target.getBoundingClientRect(),l=t.parent.getBoundingClientRect(),r=t.behavior.alignment;null!==(e=null==r?void 0:r.x)&&void 0!==e||n.ALL,null!==(i=null==r?void 0:r.y)&&void 0!==i||n.ALL;const h=s.x+(s.width-o.width)/2,a=s.y+s.height,d=window.innerWidth-(h+o.width),c=Math.max(-1*h+l.left,0),y=Math.max(a+o.height-l.bottom,0);console.log(d);const u=h+c,p=a-y;return{x:Math.max(u,0),y:Math.max(p,0),size:{width:Math.min(o.width,l.width),height:Math.min(o.height,o.bottom+p)}}}}};var n;!function(t){t.NONE="none",t.ALL="all",t.SIZE="size",t.POSITION="position"}(n||(n={}));class o{static attach(t,e,n=document.body,o={render:i.BOTTOM}){if(null==t)throw new Error("todo");if(null==e)throw new Error("todo");if(null==n)throw new Error("todo");const s=document.createElement("overlay-wrapper");return s.append(t),s.target=e,s.parent=n,s.behavior=o,this.overlays.set(t,s),n.append(s),s}static detach(t){console.log(this.overlays.get(t))}}o.overlays=new Map;class s extends HTMLElement{unsetLayout(){this.style.width="max-content",this.style.height="max-content",this.style.left="0px",this.style.top="0px",this.getBoundingClientRect()}disconnectedCallback(){this.observer.disconnect()}connectedCallback(){this.style.display="block",this.style.position="fixed",this.style.left="0px",this.style.top="0px",this.style.width="max-content",this.style.height="max-content",this.performLayout(),this.observer=new MutationObserver((()=>{this.unsetLayout(),this.performLayout()})),this.observer.observe(this.firstElementChild,{attributes:!0,characterData:!0,subtree:!0,childList:!0}),window.addEventListener("resize",(()=>{this.unsetLayout(),this.performLayout()}))}performLayout(){const t=this.behavior.render.performLayout(this);this.style.width=`${t.size.width}px`,this.style.height=`${t.size.height}px`,this.style.left=`${t.x}px`,this.style.top=`${t.y}px`}}customElements.define("overlay-wrapper",s),t.Overlay=o,t.OverlayAlignment=i,t.OverlayElement=s,t.OverlayRender=e}));
//# sourceMappingURL=index.umd.js.map
